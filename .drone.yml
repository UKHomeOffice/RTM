pipeline:
  build_6:
    image: node:6
    commands:
      - npm --loglevel warn install
      - npm run test
    when:
      event: [push, pull_request]

  build_8:
    image: node:8
    commands:
      - npm --loglevel warn install
      - npm run test
    when:
      event: [push, pull_request]

  build_app:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -t rotm-${DRONE_COMMIT_SHA} .
    when:
      event: pull_request

  build_app:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -t rotm-${DRONE_COMMIT_SHA} .
    when:
      branch: master
      event: push

  build_acceptance:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -f Dockerfile-acceptance -t acceptance-${DRONE_COMMIT_SHA} .
    when:
      event: pull_request

  build_acceptance:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -f Dockerfile-acceptance -t acceptance-${DRONE_COMMIT_SHA} .
    when:
      branch: master
      event: push

  test_acceptance:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker run -e NODE_ENV=ci -e DISABLE_CSP=true -e EMAIL_TRANSPORT=stub -e CASEWORKER_EMAIL=test@example.com -d --net host rotm-${DRONE_COMMIT_SHA}
      - docker run --rm --net host acceptance-${DRONE_COMMIT_SHA}
    when:
      event: pull_request

  test_acceptance:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker run -e NODE_ENV=ci -e DISABLE_CSP=true -d -e EMAIL_TRANSPORT=stub -e CASEWORKER_EMAIL=test@example.com --net host rotm-${DRONE_COMMIT_SHA}
      - docker run --rm --net host acceptance-${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  image_to_quay:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+drone" -p=${DOCKER_PASSWORD} quay.io
      - docker tag rotm-${DRONE_COMMIT_SHA} quay.io/ukhomeofficedigital/rotm:${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/rotm:${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  trigger_deploy_to_rotm_dev:
    image: quay.io/ukhomeofficedigital/drone-trigger:latest
    drone_server: https://drone.digital.homeoffice.gov.uk
    repo: UKHomeOffice/kube-rotm
    branch: master
    deploy_to: rotm-dev
    params: APP_IMAGE_TAG=${DRONE_COMMIT_SHA},KUBE_NAMESPACE=rotm-dev
    when:
      branch: master
      event: push

  trigger_deploy_to_rotm_preprod:
    image: quay.io/ukhomeofficedigital/drone-trigger:latest
    drone_server: https://drone.digital.homeoffice.gov.uk
    repo: UKHomeOffice/kube-rotm
    branch: master
    deploy_to: rotm-preprod
    params: APP_IMAGE_TAG=${DRONE_COMMIT_SHA},KUBE_NAMESPACE=rotm-preprod
    when:
      event: tag

services:
  redis:
    image: redis
  selenium:
    image: selenium/standalone-chrome
  dind:
    image: docker:1.11-dind
    privileged: true
    command:
      - "-s"
      - "overlay"
